Необходимо развернуть веб-приложение на .NET (6 версию желательно) или другом фреймворке:
Приложение представляет собой простейший API сервис, без подключения к БД.
Приложение готовится вами заранее:
2 сущности в модели
2 контролера для моделей
1 контролер для проверки сервиса HealthCheck
Приложение необходимо разместить в Github
На VMпоставить .NET (6 версию желательно)
Подготовить директорию для клонирования репозитория в /home/{вашеимяпользователя}/app
Собрать проект и сделать релиз в папку для деплоя /var/www/app (755)
Создать демон systemd запускающий ваше приложение (в случае .NETdll вашего приложения)
HTTP по порту 5000
Установить Nginx, использовать его в качестве реверспрокси для порта 80 к вашему приложению по порту 5000
Для защиты демонстрируем работу сервиса с помощью запросов к APIс Windows
Выводим историю команд.
Литература для ознакомления:
https://swimburger.net/blog/dotnet/how-to-run-a-dotnet-core-console-app-as-a-service-using-systemd-on-linux
https://docs.microsoft.com/ru-ru/aspnet/core/host-and-deploy/linux-nginx?view=aspnetcore-6.0#configure-nginx
https://docs.microsoft.com/ru-ru/aspnet/core/host-and-deploy/linux-nginx?view=aspnetcore-6.0#create-the-service-file

UPD: 1. Сказали будут смотреть ещё демон systemmd и настройки nginx
2. Можно использовать любой веб-фреймворк ЛЮБОГО языка
3. Требования про сущности контроллеры и тп условны, главное чтобы была страница демонстрирующая что сервис жив,и на ней или на другой странице
демонстрировался какой-то вывод(например сущностей или ещё чего-то)
4. Порты и все остальное тоже условность, по сути главное это поднять сервис,поднять nginx, чекнуть его с хоста - профит
5. СВОИ НОУТЫ ИСПОЛЬЗОВАТЬ НЕЛЬЗЯ

ПРОБРОСИТ АЙПИШНИК НАДО ЧЕРЕЗ СЕТЬ -> СЕТЕВОЙ МОСТ

sudo apt update
sudo apt install python3-pip
pip install fastapi[all]
mkdir app в домашней директории
git clone в app
создать /var/www/app (mkdir -p /var/www/app)
cp -r /home/kostya/app/os_adm_app /var/www/app
sudo nano /etc/systemd/system/my_python_service.service
-------------------------------------
[Unit]
Description=My Python Service
After=network.target

[Service]
User=your_username (узнать whoami)
Group=your_group (узнать groups)
WorkingDirectory=/var/www/app/os_adm_app/
ExecStart=/usr/bin/python3 main.py
Restart=always

[Install]
WantedBy=multi-user.target
-------------------------------------

sudo systemctl daemon-reload

sudo systemctl start my_python_service
(sudo systemctl enable my_python_service) - если скажут сделать чтобы с запуском системы запускался сервис

systemctl status

sudo apt install nginx

sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/myapp


---------------------------------------
server {
    listen 81;
    server_name пробросьте и посмотрите в ifconfig;

    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
----------------------------------------

root /var/www/app/os_adm_app


!ЗАКОМЕНТИТЬ try_files $uri $uri/ =404;!

Если делать на 80 порту, то в дефолтном конфиге закомментить строчки с прослушиванием порта


sudo ln -s /etc/nginx/sites-available/myapp /etc/nginx/sites-enabled/

sudo systemctl restart nginx
systemctl status nginx.service








